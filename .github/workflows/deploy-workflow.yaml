name: Default deploy workflow
on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      stage:
        required: true
        type: string
      branch:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ inputs.app-name }}
    steps:
      - name: Check out the codes
        uses: actions/checkout@v3
      - name: Print Test
        run: |
          echo "input working-directory :  ${{ inputs.app-name }}"
          echo "input stage :  ${{ inputs.stage }}"
          echo "input branch :  ${{ inputs.branch }}"
          pwd
          ls -altr
          echo "branch name : ${GITHUB_REF##*/}"

#      - name: Set Lambda Config
#        id: set-lambda-config
#        run: |
#          if [[ "${GITHUB_REF##*/}" == "main" ]] ; then
#          echo "STAGE=prod" >> $GITHUB_OUTPUT
#          fi
#          if [[ "${GITHUB_REF##*/}" =~ ^(stage|hotfix) ]] ; then
#          echo "STAGE=staging" >> $GITHUB_OUTPUT
#          fi
#
#      - name: Configure Stage AWS credentials
#        if: ${{ steps.set-lambda-config.outputs.STAGE == 'staging' }}
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.STG_AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.STG_AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: Configure Prod AWS credentials
#        if: ${{ steps.set-lambda-config.outputs.STAGE == 'prod' }}
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.PRD_AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.PRD_AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: Install Poetry
#        run: |
#          curl -sSL https://install.python-poetry.org | python3 - --version 1.4.2
#      - uses: actions/setup-python@v4
#        with:
#          cache: 'poetry'
#      - run: poetry install
#
#      - name: Deploy Lambda
#        env:
#          STAGE: ${{ steps.set-lambda-config.outputs.STAGE }}
#        run: |
#          ./deploy.sh ${STAGE}
