name: Default release workflow
on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string

env:
  APP_PATH: ./${{ inputs.app-name }}
  
jobs:
  release:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ env.APP_PATH }}
    steps:
      - name: Check out the codes
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install semver
        run: |
          npm install --global semver
      - name: Get the current version
        id: get-current-version
        env:
          APP_NAME: ${{ inputs.app-name }}
        run: |
          CURRENT_VERSION=$(git ls-remote --tags --refs --exit-code --sort=-v:refname \
              | grep -oE "refs/tags/${APP_NAME}/(.+)$" \
              | head -1 \
              | sed "s/refs\/tags\/${APP_NAME}\///")
          echo "CURRENT_VERSION :: ${CURRENT_VERSION}"
          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
      - name: Get the bumped version
        id: get-bumped-version
        env:
          CURRENT_VERSION: ${{ steps.get-current-version.outputs.CURRENT_VERSION }}
        run: |
          BUMPED_VERSION=$(semver --increment minor ${CURRENT_VERSION})
          echo "BUMPED_VERSION=${BUMPED_VERSION}" >> $GITHUB_OUTPUT
      - name: Update the version related files
        env:
          CURRENT_VERSION: ${{ steps.get-current-version.outputs.CURRENT_VERSION }}
          BUMPED_VERSION: ${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}
        run: |
          echo "${BUMPED_VERSION}" > ./.release/version
          if [[ "${GITHUB_REF##*/}" == "master" ]] ; then
            sed -i "s/version = \"${CURRENT_VERSION}\"/version = \"${BUMPED_VERSION}\"/" pyproject.toml
            echo "application production release version update"
          fi
      - name: Commit, Tag and Push
        uses: EndBug/add-and-commit@v7
        with:
          message: GithubAction versioning
          add: '["${{ env.APP_PATH }}/.release/version", "${{ env.APP_PATH }}/pyproject.toml"]'
          pathspec_error_handling: exitImmediately
          push: true
      - name: Create Git Release And Tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_NAME: ${{ inputs.app-name }}
        with:
          tag_name: ${{ APP_NAME }}/${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}
          release_name: ${{ APP_NAME }}/${{ steps.get-bumped-version.outputs.BUMPED_VERSION }}
          body_path: ${{ env.APP_PATH }}/.release/note.md
        id: git_release
